// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using NewsChecker.Data;

#nullable disable

namespace NewsChecker.Migrations
{
    [DbContext(typeof(NewsCheckerContext))]
    [Migration("20231030230323_CorretNespapperName")]
    partial class CorretNespapperName
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Proxies:ChangeTracking", false)
                .HasAnnotation("Proxies:CheckEquality", false)
                .HasAnnotation("Proxies:LazyLoading", true);

            modelBuilder.Entity("NewsChecker.Models.Edition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("TEXT");

                    b.Property<int>("NewspapperId")
                        .HasColumnType("INTEGER");

                    b.Property<DateOnly>("PublishDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("NewspapperId");

                    b.ToTable("Edition");
                });

            modelBuilder.Entity("NewsChecker.Models.Journalist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Journalist");
                });

            modelBuilder.Entity("NewsChecker.Models.JournalistNews", b =>
                {
                    b.Property<int>("JournalistId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NewsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("JournalistId", "NewsId");

                    b.HasIndex("NewsId");

                    b.ToTable("JournalistNews");
                });

            modelBuilder.Entity("NewsChecker.Models.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("EditionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("NewsType")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Resume")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("TEXT");

                    b.Property<string>("Subtitle")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EditionId");

                    b.ToTable("News");
                });

            modelBuilder.Entity("NewsChecker.Models.Newspapper", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Newspapper");
                });

            modelBuilder.Entity("NewsChecker.Models.Edition", b =>
                {
                    b.HasOne("NewsChecker.Models.Newspapper", "Newspapper")
                        .WithMany()
                        .HasForeignKey("NewspapperId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Newspapper");
                });

            modelBuilder.Entity("NewsChecker.Models.JournalistNews", b =>
                {
                    b.HasOne("NewsChecker.Models.Journalist", "Journalist")
                        .WithMany("JournalistNews")
                        .HasForeignKey("JournalistId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("NewsChecker.Models.News", "News")
                        .WithMany("JournalistNews")
                        .HasForeignKey("NewsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Journalist");

                    b.Navigation("News");
                });

            modelBuilder.Entity("NewsChecker.Models.News", b =>
                {
                    b.HasOne("NewsChecker.Models.Edition", "Edition")
                        .WithMany()
                        .HasForeignKey("EditionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Edition");
                });

            modelBuilder.Entity("NewsChecker.Models.Journalist", b =>
                {
                    b.Navigation("JournalistNews");
                });

            modelBuilder.Entity("NewsChecker.Models.News", b =>
                {
                    b.Navigation("JournalistNews");
                });
#pragma warning restore 612, 618
        }
    }
}
